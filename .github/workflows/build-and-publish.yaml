---
name: Test, Build and Publish OPA image
on:
    push:
        branches:
            - master
        tags:
            - '!*' # Do not execute on tags

permissions:
    contents: read
    id-token: write

jobs:
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - name: Set up Go
              uses: actions/setup-go@v3
              with:
                  go-version: ^1.19

            - name: Check out code
              uses: actions/checkout@v3

            - name: Run Unit tests.
              run: |
                  make test

            # Always upload coverage of master branch
            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  files: ./coverage.out
                  # Notify us when failed, so devs are not waiting for Codecov report when it will never come.
                  # Because Codecov report is required to be able to merge, we have to run again the whole test anyway.
                  fail_ci_if_error: true

    publish:
        name: Build and publish docker container to gcr.io
        runs-on: ubuntu-latest
        needs: [test]
        env:
            GCR_URL: gcr.io
            GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
            DOCKER_BUILDKIT: 1
        steps:
            - name: Check out code
              uses: actions/checkout@v3

            - name: Setup ENV variables
              run: |
                  echo "NOW=$(date -u +%Y-%m-%dT%H:%M:%S)" >> $GITHUB_ENV
                  echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
                  echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

            - name: Authenticate to Google Cloud
              id: auth
              uses: google-github-actions/auth@v0
              with:
                  workload_identity_provider: projects/699926043561/locations/global/workloadIdentityPools/github-dev/providers/github-dev-provider
                  service_account: opa-indykite-plugin@jarvis-dev-268314.iam.gserviceaccount.com

            - name: Trivy config scan
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: config
                  scan-ref: .
                  skip-dirs: vendor
                  exit-code: '1'
                  severity: HIGH,CRITICAL
                  trivyignores: .trivyignore

            - name: Configure Docker
              run: |-
                  gcloud --quiet auth configure-docker

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PAT }}

            - name: Build and Tag docker images
              run: |
                  make opa-ci

            - name: Run Trivy vulnerabilities scan
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: indykite/opa:latest
                  scan-type: image
                  ignore-unfixed: true
                  exit-code: '1'
                  severity: HIGH,CRITICAL
                  trivyignores: .trivyignore

            - name: Publish docker images
              run: |
                  docker push -a $GCR_URL/$GCP_PROJECT_ID/jarvis/opa
                  docker push -a indykite/opa

            - name: Check out notifier action repo
              uses: actions/checkout@v3
              with:
                  ref: master
                  repository: indykite/notifier-action
                  path: notifier-action
                  token: ${{ secrets.INDYKITEONE_PAT }}

            - name: Trigger new OPA test image build
              uses: ./notifier-action/
              with:
                  image_tag: ${{ env.SHORT_SHA }}
                  token: ${{ secrets.INDYKITEONE_PAT }}
                  owner: indykite
                  repo: jarvis-opa-test
                  workflow_id: dev-build-test-opa.yaml
                  ref: master
